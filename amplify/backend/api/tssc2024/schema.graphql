type Users @model @auth(rules: [{allow: public}]) {
  id: ID!
  Username: String
  Email: String
  Password: String
}

type CurrentScholars @model @auth(rules: [{allow: public}]) {
  id: ID!
  Name: String
  Hometown: String
  ClassYear: String
  Bio: String
  Internship_Research: String
  Awards: String
  Photo: String
  Majors: String
  Minors: String
  eventss: [Events] @manyToMany(relationName: "EventsCurrentScholars")
  scheduless: [Schedules] @manyToMany(relationName: "SchedulesCurrentScholars")
}

type Schedules @model @auth(rules: [{allow: public}]) {
  id: ID!
  Title: String
  Date: String
  Start_Time: String
  End_Time: String
  ScheduletoCurrent: [CurrentScholars] @manyToMany(relationName: "SchedulesCurrentScholars")
  ScheduletoCandidate: [Candidate] @manyToMany(relationName: "SchedulesCandidate")
}

type Events @model @auth(rules: [{allow: public}]) {
  id: ID!
  Event_Name: String
  Date: AWSDate
  Time_Start: String
  Time_End: String
  Location: String
  Professors: String
  Description: String
  EventtoCurrentScholars: [CurrentScholars] @manyToMany(relationName: "EventsCurrentScholars")
  EventtoCandidate: [Candidate] @manyToMany(relationName: "EventsCandidate")
}

type Candidate @model @auth(rules: [{allow: public}]) {
  id: ID!
  Candidate_Name: String
  Bio: String
  Photo: String
  Major: String
  eventss: [Events] @manyToMany(relationName: "EventsCandidate")
  scheduless: [Schedules] @manyToMany(relationName: "SchedulesCandidate")
}
 